#pragma once
#include <conio.h>
#include <thread>
#include "ECANVAS.h"

#include "Window_rendering.h"
//---------------------------
static void setConsoleSize()
{
	HWND console = GetConsoleWindow();
	RECT r;
	system("Title : MARVEL SUPERHERO");
	GetWindowRect(console, &r);
	MoveWindow(console,50,50, 640, 480	, SWP_SHOWWINDOW | SWP_NOMOVE);
	
	HANDLE handle = GetStdHandle(STD_OUTPUT_HANDLE);
	CONSOLE_SCREEN_BUFFER_INFO info;
	GetConsoleScreenBufferInfo(handle, &info);
	COORD new_size =
	{
		info.srWindow.Right - info.srWindow.Left + 1,
		info.srWindow.Bottom - info.srWindow.Top + 1
	};
	SetConsoleScreenBufferSize(handle, new_size);

	ReleaseDC(console, NULL);
}


int main() 
{
	setConsoleSize();

	EMATRIX C(4, 3);
	float c[] = 
	{
		0,0,0,
		1,0,0,
		0,1,0,
		0,0,1
	};
	C = c;

	EMATRIX D(4, 2);
	float d[] =
	{
		0,0,
		-cos(45),-cos(45),
		cos(45),-cos(45),
		0,1
	};
	D = d;
	EMATRIX* E = PROJECTION(&C, &D);
	EMATRIX* F = (*E) * 1000;
	EMATRIX* G = (*F) + 240;
	EMATRIX* H = C * D;
	G->info();
	CANVAS canvas(640, 480 -50);
	COLORCODE r(255, 0, 0);
	COLORCODE g(0, 255, 0);
	COLORCODE b(0, 0, 255);
	COLORCODE w(255, 255, 255);
	canvas.PAINTLINE(G->vectors[0], G->vectors[1], G->vectors[2], G->vectors[3], &r);
	canvas.PAINTLINE(G->vectors[0], G->vectors[1], G->vectors[4], G->vectors[5], &g);
	canvas.PAINTLINE(G->vectors[0], G->vectors[1], G->vectors[6], G->vectors[7], &b);
	canvas.DrawPixel(1, G->vectors[0], G->vectors[1], &w);
	canvas.c2bit24("./TEST.bmp");
	DrawBitBlt(0, 0, "./TEST.bmp");
	_getch();
	free(E);
	free(F);
	free(G);
	return 0;
}
